"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.create_gitlab_release = exports.create_github_release = exports.codecov = exports.cloudevent = exports.check_make = exports.buildkit_daemonless = exports.buildkit = exports.boskos_release = exports.boskos_acquire = exports.blue_green_deploy = exports.black = exports.bentoml = exports.asciidoctor = exports.argocd_task_connect_repo = exports.ansible_builder = exports.crunch_api_security_audit = exports.yaml_lint = exports.conftest = exports.az = exports.generate_build_id = exports.argocd_task_sync_and_wait = exports.maven = exports.eks_cluster_teardown = exports.eks_cluster_create = exports.ansible_tower_cli = exports.aws_cli = exports.kn = exports.gke_cluster_create = exports.git_clone = exports.git_batch_merge = exports.curl = exports.aws_ecr_login = exports.ansible_runner = exports.jib_maven = exports.buildah = exports.kaniko = exports.helm_upgrade_from_source = exports.buildpacks_phases = exports.buildpacks = exports.yq = exports.trigger_jenkins_job = exports.send_to_telegram = exports.rsync = exports.remote_ssh_commands = exports.redhat_codeready_dependency_analysis = exports.pull_request = exports.jenkins = exports.golang_build = exports.gogit = exports.git_cli = void 0;
exports.makisu = exports.kythe_go = exports.kubeval = exports.kubernetes_actions = exports.kube_linter = exports.kubectl_deploy_pod = exports.kubeconfig_creator = exports.ko = exports.kn_apply = exports.kind = exports.kamel_run = exports.jib_gradle = exports.istio_canary_release = exports.ibmcloud = exports.helm_upgrade_from_repo = exports.helm_conftest = exports.hadolint = exports.grype = exports.gradle = exports.goreleaser = exports.golang_test = exports.golang_fuzz = exports.golangci_lint = exports.gke_deploy = exports.git_version = exports.git_rebase = exports.gitleaks = exports.gitlab_set_status = exports.gitlab_add_label = exports.github_set_status = exports.github_request_reviewers = exports.github_open_pr = exports.github_create_deployment_status = exports.github_create_deployment = exports.github_close_issue = exports.github_app_token = exports.github_add_labels = exports.github_add_gist = exports.github_add_comment = exports.gitea_set_status = exports.gcs_upload = exports.gcs_generic = exports.gcs_download = exports.gcs_delete_bucket = exports.gcs_create_bucket = exports.gcloud = exports.flake = exports.dockerslim_build = exports.docker_build = exports.datree = void 0;
exports.wget = exports.valint = exports.upload_pypi = exports.ts_lint = exports.trivy_scanner = exports.tkn = exports.terraform_cli = exports.tekton_operator_install = exports.tekton_catalog_publish = exports.syft = exports.stackrox_image_scan = exports.stackrox_image_check = exports.sonarqube_scanner = exports.skopeo_copy = exports.shellcheck = exports.send_to_webhook_slack = exports.send_to_webhook_discord = exports.send_to_webex_room = exports.send_to_microsoft_teams = exports.send_to_channel_slack = exports.sendmail = exports.scorecard = exports.si = exports.ruby_lint = exports.robot_framework = exports.rhacs_image_scan = exports.rhacs_image_check = exports.rhacs_deployment_check = exports.replace_tokens = exports.redhat_dependency_analytics = exports.python_coverage = exports.pytest = exports.pylint = exports.prometheus_gate = exports.prettier = exports.powershell = exports.pluto = exports.orka_teardown = exports.orka_init = exports.orka_full = exports.orka_deploy = exports.openshift_uninstall = exports.openshift_install = exports.openshift_client_python = exports.openshift_client_kubecfg = exports.openshift_client = exports.npm = exports.nexus_lifecycle_scan = exports.mypy_lint = exports.markdown_lint = void 0;
exports.write_file = void 0;
const tektonHubTasksResolver_1 = require("./tektonHubTasksResolver");
const git_cli = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-cli/0.4/git-cli.yaml').build(); };
exports.git_cli = git_cli;
const gogit = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gogit/0.1/gogit.yaml').build(); };
exports.gogit = gogit;
const golang_build = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/golang-build/0.3/golang-build.yaml').build(); };
exports.golang_build = golang_build;
const jenkins = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/jenkins/0.1/jenkins.yaml').build(); };
exports.jenkins = jenkins;
const pull_request = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/pull-request/0.1/pull-request.yaml').build(); };
exports.pull_request = pull_request;
const redhat_codeready_dependency_analysis = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/redhat-codeready-dependency-analysis/0.1/redhat-codeready-dependency-analysis.yaml').build(); };
exports.redhat_codeready_dependency_analysis = redhat_codeready_dependency_analysis;
const remote_ssh_commands = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/remote-ssh-commands/0.1/remote-ssh-commands.yaml').build(); };
exports.remote_ssh_commands = remote_ssh_commands;
const rsync = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/rsync/0.1/rsync.yaml').build(); };
exports.rsync = rsync;
const send_to_telegram = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/send-to-telegram/0.1/send-to-telegram.yaml').build(); };
exports.send_to_telegram = send_to_telegram;
const trigger_jenkins_job = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/trigger-jenkins-job/0.1/trigger-jenkins-job.yaml').build(); };
exports.trigger_jenkins_job = trigger_jenkins_job;
const yq = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/yq/0.4/yq.yaml').build(); };
exports.yq = yq;
const buildpacks = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/buildpacks/0.6/buildpacks.yaml').build(); };
exports.buildpacks = buildpacks;
const buildpacks_phases = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/buildpacks-phases/0.2/buildpacks-phases.yaml').build(); };
exports.buildpacks_phases = buildpacks_phases;
const helm_upgrade_from_source = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/helm-upgrade-from-source/0.3/helm-upgrade-from-source.yaml').build(); };
exports.helm_upgrade_from_source = helm_upgrade_from_source;
const kaniko = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kaniko/0.6/kaniko.yaml').build(); };
exports.kaniko = kaniko;
const buildah = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/buildah/0.6/buildah.yaml').build(); };
exports.buildah = buildah;
const jib_maven = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/jib-maven/0.5/jib-maven.yaml').build(); };
exports.jib_maven = jib_maven;
const ansible_runner = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ansible-runner/0.2/ansible-runner.yaml').build(); };
exports.ansible_runner = ansible_runner;
const aws_ecr_login = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/aws-ecr-login/0.1/aws-ecr-login.yaml').build(); };
exports.aws_ecr_login = aws_ecr_login;
const curl = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/curl/0.1/curl.yaml').build(); };
exports.curl = curl;
const git_batch_merge = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-batch-merge/0.2/git-batch-merge.yaml').build(); };
exports.git_batch_merge = git_batch_merge;
const git_clone = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-clone/0.9/git-clone.yaml').build(); };
exports.git_clone = git_clone;
const gke_cluster_create = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gke-cluster-create/0.1/gke-cluster-create.yaml').build(); };
exports.gke_cluster_create = gke_cluster_create;
const kn = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kn/0.2/kn.yaml').build(); };
exports.kn = kn;
const aws_cli = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/aws-cli/0.2/aws-cli.yaml').build(); };
exports.aws_cli = aws_cli;
const ansible_tower_cli = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ansible-tower-cli/0.1/ansible-tower-cli.yaml').build(); };
exports.ansible_tower_cli = ansible_tower_cli;
const eks_cluster_create = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/eks-cluster-create/0.1/eks-cluster-create.yaml').build(); };
exports.eks_cluster_create = eks_cluster_create;
const eks_cluster_teardown = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/eks-cluster-teardown/0.1/eks-cluster-teardown.yaml').build(); };
exports.eks_cluster_teardown = eks_cluster_teardown;
const maven = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/maven/0.3/maven.yaml').build(); };
exports.maven = maven;
const argocd_task_sync_and_wait = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/argocd-task-sync-and-wait/0.2/argocd-task-sync-and-wait.yaml').build(); };
exports.argocd_task_sync_and_wait = argocd_task_sync_and_wait;
const generate_build_id = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/generate-build-id/0.1/generate-build-id.yaml').build(); };
exports.generate_build_id = generate_build_id;
const az = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/az/0.1/az.yaml').build(); };
exports.az = az;
const conftest = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/conftest/0.1/conftest.yaml').build(); };
exports.conftest = conftest;
const yaml_lint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/yaml-lint/0.1/yaml-lint.yaml').build(); };
exports.yaml_lint = yaml_lint;
const crunch_api_security_audit = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/42crunch-api-security-audit/0.2/42crunch-api-security-audit.yaml').build(); };
exports.crunch_api_security_audit = crunch_api_security_audit;
const ansible_builder = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ansible-builder/0.1/ansible-builder.yaml').build(); };
exports.ansible_builder = ansible_builder;
const argocd_task_connect_repo = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/argocd-task-connect-repo/0.1/argocd-task-connect-repo.yaml').build(); };
exports.argocd_task_connect_repo = argocd_task_connect_repo;
const asciidoctor = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/asciidoctor/0.1/asciidoctor.yaml').build(); };
exports.asciidoctor = asciidoctor;
const bentoml = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/bentoml/0.1/bentoml.yaml').build(); };
exports.bentoml = bentoml;
const black = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/black/0.2/black.yaml').build(); };
exports.black = black;
const blue_green_deploy = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/blue-green-deploy/0.2/blue-green-deploy.yaml').build(); };
exports.blue_green_deploy = blue_green_deploy;
const boskos_acquire = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/boskos-acquire/0.1/boskos-acquire.yaml').build(); };
exports.boskos_acquire = boskos_acquire;
const boskos_release = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/boskos-release/0.1/boskos-release.yaml').build(); };
exports.boskos_release = boskos_release;
const buildkit = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/buildkit/0.1/buildkit.yaml').build(); };
exports.buildkit = buildkit;
const buildkit_daemonless = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/buildkit-daemonless/0.1/buildkit-daemonless.yaml').build(); };
exports.buildkit_daemonless = buildkit_daemonless;
const check_make = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/check-make/0.1/check-make.yaml').build(); };
exports.check_make = check_make;
const cloudevent = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/cloudevent/0.1/cloudevent.yaml').build(); };
exports.cloudevent = cloudevent;
const codecov = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/codecov/0.1/codecov.yaml').build(); };
exports.codecov = codecov;
const create_github_release = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/create-github-release/0.1/create-github-release.yaml').build(); };
exports.create_github_release = create_github_release;
const create_gitlab_release = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/create-gitlab-release/0.1/create-gitlab-release.yaml').build(); };
exports.create_gitlab_release = create_gitlab_release;
const datree = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/datree/0.1/datree.yaml').build(); };
exports.datree = datree;
const docker_build = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/docker-build/0.1/docker-build.yaml').build(); };
exports.docker_build = docker_build;
const dockerslim_build = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/dockerslim-build/0.1/dockerslim-build.yaml').build(); };
exports.dockerslim_build = dockerslim_build;
const flake = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/flake8/0.1/flake8.yaml').build(); };
exports.flake = flake;
const gcloud = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gcloud/0.3/gcloud.yaml').build(); };
exports.gcloud = gcloud;
const gcs_create_bucket = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gcs-create-bucket/0.1/gcs-create-bucket.yaml').build(); };
exports.gcs_create_bucket = gcs_create_bucket;
const gcs_delete_bucket = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gcs-delete-bucket/0.1/gcs-delete-bucket.yaml').build(); };
exports.gcs_delete_bucket = gcs_delete_bucket;
const gcs_download = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gcs-download/0.1/gcs-download.yaml').build(); };
exports.gcs_download = gcs_download;
const gcs_generic = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gcs-generic/0.1/gcs-generic.yaml').build(); };
exports.gcs_generic = gcs_generic;
const gcs_upload = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gcs-upload/0.3/gcs-upload.yaml').build(); };
exports.gcs_upload = gcs_upload;
const gitea_set_status = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gitea-set-status/0.1/gitea-set-status.yaml').build(); };
exports.gitea_set_status = gitea_set_status;
const github_add_comment = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-add-comment/0.7/github-add-comment.yaml').build(); };
exports.github_add_comment = github_add_comment;
const github_add_gist = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-add-gist/0.2/github-add-gist.yaml').build(); };
exports.github_add_gist = github_add_gist;
const github_add_labels = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-add-labels/0.1/github-add-labels.yaml').build(); };
exports.github_add_labels = github_add_labels;
const github_app_token = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-app-token/0.2/github-app-token.yaml').build(); };
exports.github_app_token = github_app_token;
const github_close_issue = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-close-issue/0.2/github-close-issue.yaml').build(); };
exports.github_close_issue = github_close_issue;
const github_create_deployment = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-create-deployment/0.2/github-create-deployment.yaml').build(); };
exports.github_create_deployment = github_create_deployment;
const github_create_deployment_status = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-create-deployment-status/0.1/github-create-deployment-status.yaml').build(); };
exports.github_create_deployment_status = github_create_deployment_status;
const github_open_pr = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-open-pr/0.2/github-open-pr.yaml').build(); };
exports.github_open_pr = github_open_pr;
const github_request_reviewers = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-request-reviewers/0.1/github-request-reviewers.yaml').build(); };
exports.github_request_reviewers = github_request_reviewers;
const github_set_status = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/github-set-status/0.4/github-set-status.yaml').build(); };
exports.github_set_status = github_set_status;
const gitlab_add_label = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gitlab-add-label/0.1/gitlab-add-label.yaml').build(); };
exports.gitlab_add_label = gitlab_add_label;
const gitlab_set_status = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gitlab-set-status/0.2/gitlab-set-status.yaml').build(); };
exports.gitlab_set_status = gitlab_set_status;
const gitleaks = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gitleaks/0.1/gitleaks.yaml').build(); };
exports.gitleaks = gitleaks;
const git_rebase = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-rebase/0.1/git-rebase.yaml').build(); };
exports.git_rebase = git_rebase;
const git_version = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/git-version/0.1/git-version.yaml').build(); };
exports.git_version = git_version;
const gke_deploy = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gke-deploy/0.1/gke-deploy.yaml').build(); };
exports.gke_deploy = gke_deploy;
const golangci_lint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/golangci-lint/0.2/golangci-lint.yaml').build(); };
exports.golangci_lint = golangci_lint;
const golang_fuzz = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/golang-fuzz/0.1/golang-fuzz.yaml').build(); };
exports.golang_fuzz = golang_fuzz;
const golang_test = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/golang-test/0.2/golang-test.yaml').build(); };
exports.golang_test = golang_test;
const goreleaser = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/goreleaser/0.2/goreleaser.yaml').build(); };
exports.goreleaser = goreleaser;
const gradle = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/gradle/0.4/gradle.yaml').build(); };
exports.gradle = gradle;
const grype = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/grype/0.1/grype.yaml').build(); };
exports.grype = grype;
const hadolint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/hadolint/0.1/hadolint.yaml').build(); };
exports.hadolint = hadolint;
const helm_conftest = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/helm-conftest/0.1/helm-conftest.yaml').build(); };
exports.helm_conftest = helm_conftest;
const helm_upgrade_from_repo = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/helm-upgrade-from-repo/0.2/helm-upgrade-from-repo.yaml').build(); };
exports.helm_upgrade_from_repo = helm_upgrade_from_repo;
const ibmcloud = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ibmcloud/0.1/ibmcloud.yaml').build(); };
exports.ibmcloud = ibmcloud;
const istio_canary_release = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/istio-canary-release/0.1/istio-canary-release.yaml').build(); };
exports.istio_canary_release = istio_canary_release;
const jib_gradle = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/jib-gradle/0.4/jib-gradle.yaml').build(); };
exports.jib_gradle = jib_gradle;
const kamel_run = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kamel-run/0.1/kamel-run.yaml').build(); };
exports.kamel_run = kamel_run;
const kind = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kind/0.1/kind.yaml').build(); };
exports.kind = kind;
const kn_apply = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kn-apply/0.2/kn-apply.yaml').build(); };
exports.kn_apply = kn_apply;
const ko = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ko/0.1/ko.yaml').build(); };
exports.ko = ko;
const kubeconfig_creator = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kubeconfig-creator/0.1/kubeconfig-creator.yaml').build(); };
exports.kubeconfig_creator = kubeconfig_creator;
const kubectl_deploy_pod = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kubectl-deploy-pod/0.1/kubectl-deploy-pod.yaml').build(); };
exports.kubectl_deploy_pod = kubectl_deploy_pod;
const kube_linter = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kube-linter/0.1/kube-linter.yaml').build(); };
exports.kube_linter = kube_linter;
const kubernetes_actions = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kubernetes-actions/0.2/kubernetes-actions.yaml').build(); };
exports.kubernetes_actions = kubernetes_actions;
const kubeval = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kubeval/0.1/kubeval.yaml').build(); };
exports.kubeval = kubeval;
const kythe_go = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/kythe-go/0.2/kythe-go.yaml').build(); };
exports.kythe_go = kythe_go;
const makisu = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/makisu/0.1/makisu.yaml').build(); };
exports.makisu = makisu;
const markdown_lint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/markdown-lint/0.1/markdown-lint.yaml').build(); };
exports.markdown_lint = markdown_lint;
const mypy_lint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/mypy-lint/0.2/mypy-lint.yaml').build(); };
exports.mypy_lint = mypy_lint;
const nexus_lifecycle_scan = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/nexus-lifecycle-scan/0.1/nexus-lifecycle-scan.yaml').build(); };
exports.nexus_lifecycle_scan = nexus_lifecycle_scan;
const npm = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/npm/0.1/npm.yaml').build(); };
exports.npm = npm;
const openshift_client = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/openshift-client/0.2/openshift-client.yaml').build(); };
exports.openshift_client = openshift_client;
const openshift_client_kubecfg = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/openshift-client-kubecfg/0.1/openshift-client-kubecfg.yaml').build(); };
exports.openshift_client_kubecfg = openshift_client_kubecfg;
const openshift_client_python = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/openshift-client-python/0.1/openshift-client-python.yaml').build(); };
exports.openshift_client_python = openshift_client_python;
const openshift_install = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/openshift-install/0.1/openshift-install.yaml').build(); };
exports.openshift_install = openshift_install;
const openshift_uninstall = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/openshift-uninstall/0.1/openshift-uninstall.yaml').build(); };
exports.openshift_uninstall = openshift_uninstall;
const orka_deploy = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/orka-deploy/0.2/orka-deploy.yaml').build(); };
exports.orka_deploy = orka_deploy;
const orka_full = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/orka-full/0.2/orka-full.yaml').build(); };
exports.orka_full = orka_full;
const orka_init = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/orka-init/0.2/orka-init.yaml').build(); };
exports.orka_init = orka_init;
const orka_teardown = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/orka-teardown/0.2/orka-teardown.yaml').build(); };
exports.orka_teardown = orka_teardown;
const pluto = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/pluto/0.1/pluto.yaml').build(); };
exports.pluto = pluto;
const powershell = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/powershell/0.1/powershell.yaml').build(); };
exports.powershell = powershell;
const prettier = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/prettier/0.1/prettier.yaml').build(); };
exports.prettier = prettier;
const prometheus_gate = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/prometheus-gate/0.1/prometheus-gate.yaml').build(); };
exports.prometheus_gate = prometheus_gate;
const pylint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/pylint/0.3/pylint.yaml').build(); };
exports.pylint = pylint;
const pytest = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/pytest/0.2/pytest.yaml').build(); };
exports.pytest = pytest;
const python_coverage = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/python-coverage/0.1/python-coverage.yaml').build(); };
exports.python_coverage = python_coverage;
const redhat_dependency_analytics = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/redhat-dependency-analytics/0.1/redhat-dependency-analytics.yaml').build(); };
exports.redhat_dependency_analytics = redhat_dependency_analytics;
const replace_tokens = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/replace-tokens/0.1/replace-tokens.yaml').build(); };
exports.replace_tokens = replace_tokens;
const rhacs_deployment_check = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/rhacs-deployment-check/3.71/rhacs-deployment-check.yaml').build(); };
exports.rhacs_deployment_check = rhacs_deployment_check;
const rhacs_image_check = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/rhacs-image-check/3.71/rhacs-image-check.yaml').build(); };
exports.rhacs_image_check = rhacs_image_check;
const rhacs_image_scan = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/rhacs-image-scan/3.71/rhacs-image-scan.yaml').build(); };
exports.rhacs_image_scan = rhacs_image_scan;
const robot_framework = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/robot-framework/0.1/robot-framework.yaml').build(); };
exports.robot_framework = robot_framework;
const ruby_lint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ruby-lint/0.1/ruby-lint.yaml').build(); };
exports.ruby_lint = ruby_lint;
const si = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/s2i/0.3/s2i.yaml').build(); };
exports.si = si;
const scorecard = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/scorecard/0.1/scorecard.yaml').build(); };
exports.scorecard = scorecard;
const sendmail = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/sendmail/0.1/sendmail.yaml').build(); };
exports.sendmail = sendmail;
const send_to_channel_slack = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/send-to-channel-slack/0.1/send-to-channel-slack.yaml').build(); };
exports.send_to_channel_slack = send_to_channel_slack;
const send_to_microsoft_teams = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/send-to-microsoft-teams/0.1/send-to-microsoft-teams.yaml').build(); };
exports.send_to_microsoft_teams = send_to_microsoft_teams;
const send_to_webex_room = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/send-to-webex-room/0.1/send-to-webex-room.yaml').build(); };
exports.send_to_webex_room = send_to_webex_room;
const send_to_webhook_discord = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/send-to-webhook-discord/0.1/send-to-webhook-discord.yaml').build(); };
exports.send_to_webhook_discord = send_to_webhook_discord;
const send_to_webhook_slack = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/send-to-webhook-slack/0.1/send-to-webhook-slack.yaml').build(); };
exports.send_to_webhook_slack = send_to_webhook_slack;
const shellcheck = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/shellcheck/0.1/shellcheck.yaml').build(); };
exports.shellcheck = shellcheck;
const skopeo_copy = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/skopeo-copy/0.3/skopeo-copy.yaml').build(); };
exports.skopeo_copy = skopeo_copy;
const sonarqube_scanner = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/sonarqube-scanner/0.4/sonarqube-scanner.yaml').build(); };
exports.sonarqube_scanner = sonarqube_scanner;
const stackrox_image_check = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/stackrox-image-check/0.1/stackrox-image-check.yaml').build(); };
exports.stackrox_image_check = stackrox_image_check;
const stackrox_image_scan = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/stackrox-image-scan/0.1/stackrox-image-scan.yaml').build(); };
exports.stackrox_image_scan = stackrox_image_scan;
const syft = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/syft/0.1/syft.yaml').build(); };
exports.syft = syft;
const tekton_catalog_publish = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/tekton-catalog-publish/0.1/tekton-catalog-publish.yaml').build(); };
exports.tekton_catalog_publish = tekton_catalog_publish;
const tekton_operator_install = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/tekton-operator-install/0.1/tekton-operator-install.yaml').build(); };
exports.tekton_operator_install = tekton_operator_install;
const terraform_cli = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/terraform-cli/0.2/terraform-cli.yaml').build(); };
exports.terraform_cli = terraform_cli;
const tkn = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/tkn/0.4/tkn.yaml').build(); };
exports.tkn = tkn;
const trivy_scanner = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/trivy-scanner/0.2/trivy-scanner.yaml').build(); };
exports.trivy_scanner = trivy_scanner;
const ts_lint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/ts-lint/0.1/ts-lint.yaml').build(); };
exports.ts_lint = ts_lint;
const upload_pypi = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/upload-pypi/0.2/upload-pypi.yaml').build(); };
exports.upload_pypi = upload_pypi;
const valint = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/valint/0.1/valint.yaml').build(); };
exports.valint = valint;
const wget = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/wget/0.1/wget.yaml').build(); };
exports.wget = wget;
const write_file = function (scope, id) { return new tektonHubTasksResolver_1.TektonHubTask(scope, id, 'https://raw.githubusercontent.com/tektoncd/catalog/main/task/write-file/0.1/write-file.yaml').build(); };
exports.write_file = write_file;
//# sourceMappingURL=data:application/json;base64,