{
  "author": {
    "email": "nathan.good@ibm.com",
    "name": "Nathan Good",
    "roles": [
      "author"
    ]
  },
  "dependencies": {
    "cdk8s": "^2.30.0",
    "constructs": "^10.0.0"
  },
  "dependencyClosure": {
    "cdk8s": {
      "targets": {
        "dotnet": {
          "namespace": "Org.Cdk8s",
          "packageId": "Org.Cdk8s"
        },
        "go": {
          "moduleName": "github.com/cdk8s-team/cdk8s-core-go"
        },
        "java": {
          "maven": {
            "artifactId": "cdk8s",
            "groupId": "org.cdk8s"
          },
          "package": "org.cdk8s"
        },
        "js": {
          "npm": "cdk8s"
        },
        "python": {
          "distName": "cdk8s",
          "module": "cdk8s"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "cdk8s-pipelines",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/cloud-native-toolkit/cdk8s-pipelines.git",
  "jsiiVersion": "5.0.19 (build bf5f37b)",
  "keywords": [
    "cdk",
    "cdk8s",
    "kubernetes",
    "pipelines",
    "tekton"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "cdk8s-pipelines",
  "readme": {
    "markdown": "# CDK8s Pipelines\n\nThis is a construct for creating [Pipelines](https://tekton.dev/docs/getting-started/pipelines/)\nusing [cdk8s](https://cdk8s.io/docs/latest/).\n\n## Examples\n\n```typescript\nconst pipeline = new Pipeline(this, 'my-pipeline');\n```\n\n## Pipeline objects and builders\n\nTekton [Pipelines](https://tekton.dev/docs/pipelines/),\n[Tasks](https://tekton.dev/docs/pipelines/tasks/),\n[Workspaces](https://tekton.dev/docs/pipelines/tasks/#specifying-workspaces),\n[Parameters](https://tekton.dev/docs/pipelines/tasks/#specifying-parameters),\nand other resources refer to one another within a pipeline. For example, a\nTask may have a `params` that a value that is `$(params.foo)`, meaning it uses\nthe `param` named `foo` at the pipeline level within the task.\n\nIt is a goal of the _builders_ within this library to simplify that\ncross-referencing during the process of defining a Pipeline and its `tasks`,\n`workspaces`, and `params`.\n\nTherefore, within this library there are objects that strictly define the\nstructure of the construct itself and can be `synth()`'ed to create the\nKubernetes resources. You are free to use the constructs and define all the\ncross-references yourself. For example, here is a `Pipeline` that defines all\nresources to create a Pipeline that closely matches the\n[example here](https://tekton.dev/docs/how-to-guides/kaniko-build-push/):\n\n```typescript\nnew Pipeline(this, 'test-pipeline', {\n  metadata: {\n    name: 'clone-build-push',\n  },\n  spec: {\n    description: 'This pipeline closes a repository, builds a Docker image, etc.',\n    params: [\n      {\n        name: 'repo-url',\n        type: 'string',\n      },\n    ],\n    workspaces: [\n      {\n        name: 'shared-data',\n      },\n    ],\n    tasks: [\n      {\n        name: 'fetch-source',\n        taskRef: {\n          name: 'git-clone',\n        },\n        workspaces: [\n          {\n            name: 'output',\n            workspace: 'shared-data',\n          },\n        ],\n        params: [\n          {\n            name: 'url',\n            value: '$(params.repo-url)',\n          },\n        ],\n      },\n    ],\n  },\n});\n```\n\nAlternatively, using the _builders_ (e.g., `PipelineBuilder`) for the resources\nprovides a fluid syntax that you can use to add the resources with cross-references\nmade for you automatically. Here is the same construct, but defined using the\n`PipelineBuilder`.\n\n```typescript\nnew PipelineBuilder(this, 'my-pipeline')\n    .withName('clone-build-push')\n    .withDescription('This pipeline closes a repository, builds a Docker image, etc.')\n    .withTask(new PipelineTaskBuilder()\n            .withName('fetch-source')\n            .withTaskReference('git-clone')\n            .withWorkspace('output', 'shared-data', 'The files cloned by the task')\n            .withStringParam('url', 'repo-url', '$(params.repo-url)'))\n    .buildPipeline();\n```\n\nThe `build` method on the builders will validate the parameters and, if the\nobject is valid, will create the construct, making sure to add `workspace`\nand `param` resources to the Task as well as the\n\nAny resources that the `task` requires that needs to be defined at the `pipeline`\n\n## Related projects\n\nThis is the core project with the basic Pipeline constructs. There are other\nconstructs that use this construct to develop richer pipelines and tasks that\nare based on tasks available in [Tekton Hub](https://hub.tekton.dev/).\n\n* [cdk8s-pipelines-lib](https://github.com/cloud-native-toolkit/cdk8s-pipelines-lib) - A library of\nconstructs that allows you to easily create Tekton pipelines that use tasks from\nTekton Hub and also provides some basic, reusable pipelines.\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/cloud-native-toolkit/cdk8s-pipelines.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "cdk8s-pipelines"
    }
  },
  "types": {
    "cdk8s-pipelines.BuilderOptions": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The options for builders for the `buildXX()` methods."
      },
      "fqn": "cdk8s-pipelines.BuilderOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 64
      },
      "name": "BuilderOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This is\ndesigned to run on as minimal cluster as possible, with as few pre steps\nas possible.",
            "stability": "stable",
            "summary": "If true, all the dependent objects are generated with the build."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 70
          },
          "name": "includeDependencies",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "src/builders:BuilderOptions"
    },
    "cdk8s-pipelines.NameKeyPair": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-pipelines.NameKeyPair",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common.ts",
        "line": 20
      },
      "name": "NameKeyPair",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common.ts",
            "line": 21
          },
          "name": "key",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common:NameKeyPair"
    },
    "cdk8s-pipelines.NamedResource": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-pipelines.NamedResource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/common.ts",
        "line": 16
      },
      "name": "NamedResource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/common.ts",
            "line": 17
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/common:NamedResource"
    },
    "cdk8s-pipelines.ParameterBuilder": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "stability": "stable",
        "summary": "Builds the parameters for use by Tasks and Pipelines."
      },
      "fqn": "cdk8s-pipelines.ParameterBuilder",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/builders.ts",
          "line": 142
        },
        "parameters": [
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 133
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the type of the parameter."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 185
          },
          "name": "ofType",
          "parameters": [
            {
              "name": "type",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.ParameterBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the default value for the parameter."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 220
          },
          "name": "withDefaultValue",
          "parameters": [
            {
              "name": "val",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.ParameterBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the description of the parameter."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 176
          },
          "name": "withDescription",
          "parameters": [
            {
              "name": "desc",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.ParameterBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the name of the parameter."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 167
          },
          "name": "withName",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.ParameterBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the default value for the parameter."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 234
          },
          "name": "withPiplineParameter",
          "parameters": [
            {
              "name": "pipelineParamName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "defaultValue",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.ParameterBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the value for the parameter."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 201
          },
          "name": "withValue",
          "parameters": [
            {
              "name": "val",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.ParameterBuilder"
            }
          }
        }
      ],
      "name": "ParameterBuilder",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 159
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns true if this parameter expects input at the pipeline level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 245
          },
          "name": "requiresPipelineParameter",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 225
          },
          "name": "defaultValue",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the logicalID for the `ParameterBuilder`, which is used by the underlying construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 151
          },
          "name": "logicalID",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 155
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the type of the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 193
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the value of the parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 212
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/builders:ParameterBuilder"
    },
    "cdk8s-pipelines.PersistentVolumeClaimRef": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A reference to a PersistentVolumeClaim."
      },
      "fqn": "cdk8s-pipelines.PersistentVolumeClaimRef",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 178
      },
      "name": "PersistentVolumeClaimRef",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 179
          },
          "name": "claimName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PersistentVolumeClaimRef"
    },
    "cdk8s-pipelines.Pipeline": {
      "assembly": "cdk8s-pipelines",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "Pipeline"
        },
        "see": "https://tekton.dev/docs/pipelines/pipelines/#configuring-a-pipeline",
        "stability": "stable",
        "summary": "The Pipeline allows you to specify Tasks that use Parameters and Workspaces to accomplish complex tasks on the cluster."
      },
      "fqn": "cdk8s-pipelines.Pipeline",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"Pipeline\" API object."
        },
        "locationInModule": {
          "filename": "src/pipelines.ts",
          "line": 126
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-pipelines.PipelineProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 93
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"Pipeline\"."
          },
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 110
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-pipelines.PipelineProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 138
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "Pipeline",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"Pipeline\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 98
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/pipelines:Pipeline"
    },
    "cdk8s-pipelines.PipelineBuilder": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-pipelines.PipelineBuilder",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/builders.ts",
          "line": 734
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 727
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Builds the actual [Pipeline](https://tekton.dev/docs/getting-started/pipelines/) from the settings configured using the fluid syntax."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 842
          },
          "name": "buildPipeline",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s-pipelines.BuilderOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provides the name for the pipeline task and will be rendered as the `name` property."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 761
          },
          "name": "withDescription",
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Provides the name for the pipeline task and will be rendered as the `name` property."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 744
          },
          "name": "withName",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 767
          },
          "name": "withTask",
          "parameters": [
            {
              "name": "taskB",
              "type": {
                "fqn": "cdk8s-pipelines.TaskBuilder"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineBuilder"
            }
          }
        }
      ],
      "name": "PipelineBuilder",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the name of the pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 752
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "Note this is an \"expensive\" get because it loops through the tasks in the\npipeline and checks for duplicates in the pipeline parameters for each task\nparameter found. You should avoid calling this in a loop--instead, declare\na local variable before the loop and reference that instead.",
            "returns": "PipelineParam[] An array of the pipeline parameters.",
            "stability": "stable",
            "summary": "Returns the array of `PipelineParam` objects that represent the parameters configured for the `Pipeline`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 787
          },
          "name": "params",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineParam"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is an \"expensive\" get because it loops through the workspaces in the\npipeline and checks for duplicates in the pipeline workspaces for each task\nworkspace found. You should avoid calling this in a loop--instead, declare\na local variable before the loop and reference that instead.",
            "returns": "PipelineWorkspace[] An array of the pipeline workspaces.",
            "stability": "stable",
            "summary": "Returns the array of `PipelineWorkspace` objects that represent the workspaces configured for the `Pipeline`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 820
          },
          "name": "workspaces",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineWorkspace"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/builders:PipelineBuilder"
    },
    "cdk8s-pipelines.PipelineParam": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "remarks": "See https://tekton.dev/docs/pipelines/pipelines/#specifying-parameters",
        "stability": "stable",
        "summary": "A Pipeline parameter."
      },
      "fqn": "cdk8s-pipelines.PipelineParam",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 13
      },
      "name": "PipelineParam",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 15
          },
          "name": "default",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 14
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineParam"
    },
    "cdk8s-pipelines.PipelineProps": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties used to create the Pipelines."
      },
      "fqn": "cdk8s-pipelines.PipelineProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 81
      },
      "name": "PipelineProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 82
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 83
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-pipelines.PipelineSpec"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineProps"
    },
    "cdk8s-pipelines.PipelineRef": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/pipelineruns/#specifying-the-target-pipeline",
        "stability": "stable",
        "summary": "A reference to a `Pipeline` by its name."
      },
      "fqn": "cdk8s-pipelines.PipelineRef",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 158
      },
      "name": "PipelineRef",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the `Pipeline` to that is referenced."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 162
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineRef"
    },
    "cdk8s-pipelines.PipelineRun": {
      "assembly": "cdk8s-pipelines",
      "base": "cdk8s.ApiObject",
      "docs": {
        "custom": {
          "schema": "PipelineRun"
        },
        "see": "https://tekton.dev/docs/pipelines/pipelineruns/",
        "stability": "stable",
        "summary": "The PipelineRun allows you to specify how you want to execute a `Pipeline`."
      },
      "fqn": "cdk8s-pipelines.PipelineRun",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a `PipelineRun` API object."
        },
        "locationInModule": {
          "filename": "src/pipelines.ts",
          "line": 257
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-pipelines.PipelineRunProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 224
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for `PipelineRun`."
          },
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 241
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-pipelines.PipelineProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 269
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "PipelineRun",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"PipelineRun\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 229
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineRun"
    },
    "cdk8s-pipelines.PipelineRunBuilder": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/pipelineruns/",
        "stability": "stable",
        "summary": "Builds a `PipelineRun` using the supplied configuration."
      },
      "fqn": "cdk8s-pipelines.PipelineRunBuilder",
      "initializer": {
        "docs": {
          "remarks": "A pipeline run is configured only for a specific pipeline, so it did not\nmake any sense here to allow the run to be created without the pipeline\nspecified.",
          "stability": "stable",
          "summary": "Creates a new instance of the `PipelineRunBuilder` for the specified `Pipeline` that is built by the `PipelineBuilder` supplied here."
        },
        "locationInModule": {
          "filename": "src/builders.ts",
          "line": 950
        },
        "parameters": [
          {
            "docs": {
              "summary": "The `Construct` in which to create the `PipelineRun`."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "The logical ID of the `PipelineRun` construct."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "The `Pipeline` for which to create this run, using the `PipelineBuilder`."
            },
            "name": "pipeline",
            "type": {
              "fqn": "cdk8s-pipelines.PipelineBuilder"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 929
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Builds the `PipelineRun` for the configured `Pipeline` used in the constructor."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 1023
          },
          "name": "buildPipelineRun",
          "parameters": [
            {
              "name": "opts",
              "optional": true,
              "type": {
                "fqn": "cdk8s-pipelines.BuilderOptions"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 1002
          },
          "name": "withClusterRoleBindingProps",
          "parameters": [
            {
              "name": "props",
              "type": {
                "fqn": "cdk8s.ApiObjectProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineRunBuilder"
            }
          }
        },
        {
          "docs": {
            "remarks": "It will throw an error if you try\nto add a parameter that does not exist on the pipeline.",
            "stability": "stable",
            "summary": "Adds a run parameter to the `PipelineRun`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 967
          },
          "name": "withRunParam",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the parameter added to the pipeline run."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The value of the parameter added to the pipeline run."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineRunBuilder"
            }
          }
        },
        {
          "docs": {
            "remarks": "If this method is not called prior to `buildPipelineRun()`,\nthen the default service account will be used, which is _default:pipeline_.",
            "stability": "stable",
            "summary": "Uses the provided role name for the `serviceAccountName` on the `PipelineRun`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 1014
          },
          "name": "withServiceAccount",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the service account (`serviceAccountName`) to use."
              },
              "name": "sa",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineRunBuilder"
            }
          }
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#create-a-persistentvolumeclaim",
            "stability": "stable",
            "summary": "Allows you to specify the name of a `PersistentVolumeClaim` but does not do any compile-time validation on the volume claim's name or existence."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 991
          },
          "name": "withWorkspace",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the workspace in the `PipelineRun` that will be used by the `Pipeline`."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The name of the `PersistentVolumeClaim` to use for the `workspace`."
              },
              "name": "claimName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The sub path on the `persistentVolumeClaim` to use for the `workspace`."
              },
              "name": "subPath",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.PipelineRunBuilder"
            }
          }
        }
      ],
      "name": "PipelineRunBuilder",
      "symbolId": "src/builders:PipelineRunBuilder"
    },
    "cdk8s-pipelines.PipelineRunParam": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The parameters for a particular `PipelineRun`."
      },
      "fqn": "cdk8s-pipelines.PipelineRunParam",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 168
      },
      "name": "PipelineRunParam",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value of the parameter in this `PipelineRun`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 172
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineRunParam"
    },
    "cdk8s-pipelines.PipelineRunProps": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-pipelines.PipelineRunProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 205
      },
      "name": "PipelineRunProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 206
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies a `ServiceAccount` object that supplies specific execution credentials for the `Pipeline`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 215
          },
          "name": "serviceAccountName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Specifies the configuration information for this `PipelineRun` object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 210
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-pipelines.PipelineRunSpec"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineRunProps"
    },
    "cdk8s-pipelines.PipelineRunSpec": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/pipelineruns/#configuring-a-pipelinerun",
        "stability": "stable",
        "summary": "The details for the `PipelineRun`."
      },
      "fqn": "cdk8s-pipelines.PipelineRunSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 196
      },
      "name": "PipelineRunSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Required `Pipeline` reference."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 200
          },
          "name": "pipelineRef",
          "type": {
            "fqn": "cdk8s-pipelines.PipelineRef"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 201
          },
          "name": "params",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineRunParam"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 202
          },
          "name": "workspaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineRunWorkspace"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineRunSpec"
    },
    "cdk8s-pipelines.PipelineRunWorkspace": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/pipelineruns/#specifying-workspaces",
        "stability": "stable",
        "summary": "The `Workspace` configuration for a `PipelineRun`."
      },
      "fqn": "cdk8s-pipelines.PipelineRunWorkspace",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 187
      },
      "name": "PipelineRunWorkspace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 188
          },
          "name": "persistentVolumeClaim",
          "type": {
            "fqn": "cdk8s-pipelines.PersistentVolumeClaimRef"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 189
          },
          "name": "subPath",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineRunWorkspace"
    },
    "cdk8s-pipelines.PipelineSpec": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/pipelines/",
        "stability": "stable",
        "summary": "The `spec` part of the Pipeline."
      },
      "fqn": "cdk8s-pipelines.PipelineSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 56
      },
      "name": "PipelineSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The `tasks` are required on the Pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 65
          },
          "name": "tasks",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineTask"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the `Pipeline`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 60
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 61
          },
          "name": "params",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineParam"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Workspaces allow you to specify one or more volumes that each Task in the\nPipeline requires during execution. You specify one or more Workspaces in\nthe workspaces field.",
            "see": "https://tekton.dev/docs/pipelines/pipelines/#specifying-workspaces",
            "stability": "stable",
            "summary": "Pipeline workspaces."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 75
          },
          "name": "workspaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineWorkspace"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineSpec"
    },
    "cdk8s-pipelines.PipelineTask": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "remarks": "See https://tekton.dev/docs/pipelines/pipelines/#adding-tasks-to-the-pipeline",
        "stability": "stable",
        "summary": "A task in a pipeline."
      },
      "fqn": "cdk8s-pipelines.PipelineTask",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 25
      },
      "name": "PipelineTask",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 27
          },
          "name": "params",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskParam"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 28
          },
          "name": "runAfter",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 26
          },
          "name": "taskRef",
          "optional": true,
          "type": {
            "fqn": "cdk8s-pipelines.TaskRef"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 29
          },
          "name": "workspaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineTaskWorkspace"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineTask"
    },
    "cdk8s-pipelines.PipelineTaskDef": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A task definition at the pipeline level."
      },
      "fqn": "cdk8s-pipelines.PipelineTaskDef",
      "interfaces": [
        "cdk8s-pipelines.PipelineTask"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 46
      },
      "name": "PipelineTaskDef",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 47
          },
          "name": "refParams",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineParam"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 48
          },
          "name": "refWorkspaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.PipelineTaskWorkspace"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineTaskDef"
    },
    "cdk8s-pipelines.PipelineTaskWorkspace": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "cdk8s-pipelines.PipelineTaskWorkspace",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 18
      },
      "name": "PipelineTaskWorkspace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 19
          },
          "name": "workspace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineTaskWorkspace"
    },
    "cdk8s-pipelines.PipelineWorkspace": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "remarks": "See https://tekton.dev/docs/pipelines/pipelines/#specifying-workspaces\nand https://tekton.dev/docs/pipelines/workspaces/#using-workspaces-in-pipelines.",
        "stability": "stable",
        "summary": "A workspace for a pipeline."
      },
      "fqn": "cdk8s-pipelines.PipelineWorkspace",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/pipelines.ts",
        "line": 36
      },
      "name": "PipelineWorkspace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/pipelines.ts",
            "line": 40
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/pipelines:PipelineWorkspace"
    },
    "cdk8s-pipelines.Task": {
      "assembly": "cdk8s-pipelines",
      "base": "cdk8s.ApiObject",
      "docs": {
        "remarks": "A\n> Task executes as a Pod on your Kubernetes cluster. A Task is available within a\n> specific namespace, while a ClusterTask is available across the entire\n> cluster.",
        "see": "https://tekton.dev/docs/pipelines/tasks/",
        "stability": "stable",
        "summary": "A Tekton Task, which is > a collection of Steps that you define and arrange in > a specific order of execution as part of your continuous integration flow."
      },
      "fqn": "cdk8s-pipelines.Task",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Defines a \"Task\" API object."
        },
        "locationInModule": {
          "filename": "src/tasks.ts",
          "line": 256
        },
        "parameters": [
          {
            "docs": {
              "summary": "the scope in which to define this object."
            },
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "docs": {
              "summary": "a scope-local name for the object."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "initialization props."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "cdk8s-pipelines.TaskProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 217
      },
      "methods": [
        {
          "docs": {
            "remarks": "This can be used to inline resource manifests inside other objects (e.g. as templates).",
            "stability": "stable",
            "summary": "Renders a Kubernetes manifest for \"Task\"."
          },
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 233
          },
          "name": "manifest",
          "parameters": [
            {
              "docs": {
                "summary": "initialization props."
              },
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "cdk8s-pipelines.TaskProps"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "any"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Renders the object to Kubernetes JSON."
          },
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 268
          },
          "name": "toJson",
          "overrides": "cdk8s.ApiObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "Task",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Returns the apiVersion and kind for \"Task\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 221
          },
          "name": "GVK",
          "static": true,
          "type": {
            "fqn": "cdk8s.GroupVersionKind"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The configuration for the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 246
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-pipelines.TaskSpec"
          }
        }
      ],
      "symbolId": "src/tasks:Task"
    },
    "cdk8s-pipelines.TaskBuilder": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "remarks": "To use a builder for tasks that will be used in a Pipeline, use the\n`PipelineBuilder` instead.",
        "stability": "stable",
        "summary": "Builds Tekton `Task` objects that are independent of a `Pipeline`."
      },
      "fqn": "cdk8s-pipelines.TaskBuilder",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new instance of the `TaskBuilder` using the given `scope` and `id`."
        },
        "locationInModule": {
          "filename": "src/builders.ts",
          "line": 537
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 512
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Builds the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 676
          },
          "name": "buildTask"
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
            "stability": "stable",
            "summary": "Adds an annotation to the `Task` `metadata` with the provided key and value."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 573
          },
          "name": "withAnnotation",
          "parameters": [
            {
              "docs": {
                "summary": "The annotation's key."
              },
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The annotation's value."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the `description` of the `Task` being built."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 601
          },
          "name": "withDescription",
          "parameters": [
            {
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "see": "https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
            "stability": "stable",
            "summary": "Adds a label to the `Task` with the provided label key and value."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 557
          },
          "name": "withLabel",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sets the name of the `Task` being built."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 592
          },
          "name": "withName",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "see": "https://tekton.dev/docs/pipelines/tasks/#emitting-results",
            "stability": "stable",
            "summary": "Allows you to add an result to the Task."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 651
          },
          "name": "withResult",
          "parameters": [
            {
              "docs": {
                "summary": "The name of the result."
              },
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "The result's description."
              },
              "name": "description",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the given `step` (`TaskStepBuilder`) to the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 668
          },
          "name": "withStep",
          "parameters": [
            {
              "name": "step",
              "type": {
                "fqn": "cdk8s-pipelines.TaskStepBuilder"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a parameter of type string to the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 634
          },
          "name": "withStringParam",
          "parameters": [
            {
              "name": "param",
              "type": {
                "fqn": "cdk8s-pipelines.ParameterBuilder"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the specified workspace to the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 617
          },
          "name": "withWorkspace",
          "parameters": [
            {
              "name": "workspace",
              "type": {
                "fqn": "cdk8s-pipelines.WorkspaceBuilder"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskBuilder"
            }
          }
        }
      ],
      "name": "TaskBuilder",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 545
          },
          "name": "logicalID",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the `description` of the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 609
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the name of the `Task` built by the `TaskBuilder`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 584
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 639
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.ParameterBuilder"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the workspaces for the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 625
          },
          "name": "workspaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.WorkspaceBuilder"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/builders:TaskBuilder"
    },
    "cdk8s-pipelines.TaskEnvValueSource": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The source for a `env` `valueFrom`."
      },
      "fqn": "cdk8s-pipelines.TaskEnvValueSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 28
      },
      "name": "TaskEnvValueSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 29
          },
          "name": "secretKeyRef",
          "type": {
            "fqn": "cdk8s-pipelines.NameKeyPair"
          }
        }
      ],
      "symbolId": "src/tasks:TaskEnvValueSource"
    },
    "cdk8s-pipelines.TaskParam": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A Task parameter value."
      },
      "fqn": "cdk8s-pipelines.TaskParam",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 74
      },
      "name": "TaskParam",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value of the task parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 78
          },
          "name": "value",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskParam"
    },
    "cdk8s-pipelines.TaskProps": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties used to create the Task."
      },
      "fqn": "cdk8s-pipelines.TaskProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 195
      },
      "name": "TaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The object [metadata](https://kubernetes.io/docs/concepts/overview/working-with-objects/#required-fields) that conforms to standard Kubernetes metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 200
          },
          "name": "metadata",
          "optional": true,
          "type": {
            "fqn": "cdk8s.ApiObjectMetadata"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The `spec` is the configuration of the `Task` object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 204
          },
          "name": "spec",
          "optional": true,
          "type": {
            "fqn": "cdk8s-pipelines.TaskSpec"
          }
        }
      ],
      "symbolId": "src/tasks:TaskProps"
    },
    "cdk8s-pipelines.TaskRef": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "remarks": "Will be generated as a `taskRef`.",
        "stability": "stable",
        "summary": "A `Task` reference."
      },
      "fqn": "cdk8s-pipelines.TaskRef",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/tasks.ts",
          "line": 66
        },
        "parameters": [
          {
            "name": "name",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 63
      },
      "name": "TaskRef",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 64
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskRef"
    },
    "cdk8s-pipelines.TaskSpec": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/tasks/#configuring-a-task",
        "stability": "stable",
        "summary": "The Task spec."
      },
      "fqn": "cdk8s-pipelines.TaskSpec",
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 168
      },
      "name": "TaskSpec",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://tekton.dev/docs/pipelines/tasks/#adding-a-description",
            "stability": "stable",
            "summary": "The description of the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 173
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://tekton.dev/docs/pipelines/tasks/#specifying-parameters",
            "stability": "stable",
            "summary": "The `Task`'s parameters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 178
          },
          "name": "params",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskSpecParam"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 180
          },
          "name": "results",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskSpecResult"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The `Step` should\nfit the (container contract)[https://tekton.dev/docs/pipelines/container-contract/]",
            "see": "https://tekton.dev/docs/pipelines/tasks/#defining-steps",
            "stability": "stable",
            "summary": "The steps that will be executed as part of the Task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 188
          },
          "name": "steps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskStep"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 182
          },
          "name": "workspaces",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskWorkspace"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/tasks:TaskSpec"
    },
    "cdk8s-pipelines.TaskSpecParam": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies execution parameters for the Task."
      },
      "fqn": "cdk8s-pipelines.TaskSpecParam",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 101
      },
      "name": "TaskSpecParam",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The default value for a parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 113
          },
          "name": "default",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The parameter's description."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 109
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The parameter's type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 105
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskSpecParam"
    },
    "cdk8s-pipelines.TaskSpecResult": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "see": "https://tekton.dev/docs/pipelines/tasks/#emitting-results",
        "stability": "stable",
        "summary": "The Task results."
      },
      "fqn": "cdk8s-pipelines.TaskSpecResult",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 86
      },
      "name": "TaskSpecResult",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 90
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This could be an array, but if it is not supplied the\ndefault is a string.",
            "stability": "stable",
            "summary": "The type of result."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 95
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskSpecResult"
    },
    "cdk8s-pipelines.TaskStep": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "remarks": "See https://tekton.dev/docs/pipelines/tasks/#defining-steps",
        "see": "https://tekton.dev/docs/pipelines/container-contract/",
        "stability": "stable",
        "summary": "The step for a Task."
      },
      "fqn": "cdk8s-pipelines.TaskStep",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 127
      },
      "name": "TaskStep",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Alternatively, you can supply `args` to the `command` value here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 146
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `command` is supplied, you should not supply\n`script`.",
            "stability": "stable",
            "summary": "The command and its arguments (provided in the form of an array) to execute on the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 142
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Environment variables for the `Step` on the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 159
          },
          "name": "env",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskStepEnv"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the container image to use for the Step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 131
          },
          "name": "image",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If `script` is specified,\nthen the `command` value should not be specified.",
            "stability": "stable",
            "summary": "A script that will be executed on the image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 136
          },
          "name": "script",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The volume mounts to use for the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 150
          },
          "name": "volumeMounts",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "cdk8s-pipelines.TaskVolumeMount"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the working directory for the step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 154
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskStep"
    },
    "cdk8s-pipelines.TaskStepBuilder": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "stability": "stable",
        "summary": "Creates a `Step` in a `Task`."
      },
      "fqn": "cdk8s-pipelines.TaskStepBuilder",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "src/builders.ts",
          "line": 348
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 336
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 484
          },
          "name": "buildTaskStep",
          "returns": {
            "optional": true,
            "type": {
              "fqn": "cdk8s-pipelines.TaskStep"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use this when you have the script data from a source other than a file or\nan object. Use the other methods, such as `fromScriptUrl` (when the script\nis in a file) or `scriptFromObject` (when the script is a CDK8s object)\nrather than resolving those yourself.",
            "stability": "stable",
            "summary": "If supplied, uses the provided script data as-is for the script value."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 459
          },
          "name": "fromScriptData",
          "parameters": [
            {
              "name": "data",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "remarks": "This is most useful when used with `oc apply` or\nother tasks in which you want to apply the object during the step in the\npipeline.\n\nIf you supply this, do not supply a value for `fromScriptUrl`.",
            "stability": "stable",
            "summary": "If supplied, uses the cdk8s `ApiObject` supplied as the body of the `script` for the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 444
          },
          "name": "fromScriptObject",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "primitive": "any"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use this as an alternative to \"heredoc\", which\nis embedding hard-coded shell or other scripts in the step.\n\nIf you supply this, do not supply a value for `fromScriptObject`.",
            "stability": "stable",
            "summary": "If supplied, uses the content found at the given URL for the `script` value of the step."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 430
          },
          "name": "fromScriptUrl",
          "parameters": [
            {
              "name": "url",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The args to use with the `command`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 417
          },
          "name": "withArgs",
          "parameters": [
            {
              "name": "args",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "remarks": "If\n`command` is specified, do not specify `script`.",
            "stability": "stable",
            "summary": "The name of the command to use when running the `Step` of the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 408
          },
          "name": "withCommand",
          "parameters": [
            {
              "name": "cmd",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 473
          },
          "name": "withEnv",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "valueFrom",
              "type": {
                "fqn": "cdk8s-pipelines.TaskEnvValueSource"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the image to use when executing the `Step` on the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 398
          },
          "name": "withImage",
          "parameters": [
            {
              "name": "img",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 389
          },
          "name": "withName",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The `workingDir` of the `Task`."
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 468
          },
          "name": "withWorkingDir",
          "parameters": [
            {
              "name": "dir",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.TaskStepBuilder"
            }
          }
        }
      ],
      "name": "TaskStepBuilder",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the command-line arguments that will be supplied to the `command`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 374
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the command used for the `Step` on the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 381
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the container `image` used to execute the `Step` of the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 363
          },
          "name": "image",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the `Step` of the `Task`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 355
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 367
          },
          "name": "scriptData",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 385
          },
          "name": "workingDir",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/builders:TaskStepBuilder"
    },
    "cdk8s-pipelines.TaskStepEnv": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An `env` for a `Step` on a `Task`."
      },
      "fqn": "cdk8s-pipelines.TaskStepEnv",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 45
      },
      "name": "TaskStepEnv",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 46
          },
          "name": "valueFrom",
          "optional": true,
          "type": {
            "fqn": "cdk8s-pipelines.TaskEnvValueSource"
          }
        }
      ],
      "symbolId": "src/tasks:TaskStepEnv"
    },
    "cdk8s-pipelines.TaskVolumeMount": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The volume mount for the task."
      },
      "fqn": "cdk8s-pipelines.TaskVolumeMount",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 119
      },
      "name": "TaskVolumeMount",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 120
          },
          "name": "mountPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskVolumeMount"
    },
    "cdk8s-pipelines.TaskWorkspace": {
      "assembly": "cdk8s-pipelines",
      "datatype": true,
      "docs": {
        "remarks": "See https://tekton.dev/docs/pipelines/workspaces/#using-workspaces-in-tasks for more information.",
        "stability": "stable",
        "summary": "A workspace used by a Task."
      },
      "fqn": "cdk8s-pipelines.TaskWorkspace",
      "interfaces": [
        "cdk8s-pipelines.NamedResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/tasks.ts",
        "line": 52
      },
      "name": "TaskWorkspace",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The description of the workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 57
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/tasks.ts",
            "line": 53
          },
          "name": "logicalID",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/tasks:TaskWorkspace"
    },
    "cdk8s-pipelines.WorkspaceBuilder": {
      "assembly": "cdk8s-pipelines",
      "docs": {
        "stability": "stable",
        "summary": "Builds the Workspaces for use by Tasks and Pipelines."
      },
      "fqn": "cdk8s-pipelines.WorkspaceBuilder",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates the `WorkspaceBuilder`, using the given `id` as the logical ID for the workspace."
        },
        "locationInModule": {
          "filename": "src/builders.ts",
          "line": 93
        },
        "parameters": [
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/builders.ts",
        "line": 83
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 123
          },
          "name": "withDescription",
          "parameters": [
            {
              "name": "desc",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.WorkspaceBuilder"
            }
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 118
          },
          "name": "withName",
          "parameters": [
            {
              "name": "name",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "cdk8s-pipelines.WorkspaceBuilder"
            }
          }
        }
      ],
      "name": "WorkspaceBuilder",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the description of the workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 114
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the logical ID of the `Workspace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 100
          },
          "name": "logicalID",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gets the name of the workspace."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/builders.ts",
            "line": 107
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/builders:WorkspaceBuilder"
    }
  },
  "version": "0.0.16",
  "fingerprint": "Mmbj4nAVHnBl4FF9ml/v9SL6t9pUTkqMGYjabrdACsk="
}